{
    "$schema": "http://json-schema.org/schema#",
    "properties": {
        "cluster": {
            "properties": {
                "kubernetesVersion": {
                    "title": "Kubernetes version",
                    "type": "string"
                }
            },
            "title": "Cluster",
            "type": "object"
        },
        "apiServer": {
            "properties": {
                "certSANs": {
                    "default": [],
                    "description": "Alternative names to encode in the API server's certificate.",
                    "items": {
                        "title": "SAN",
                        "type": "string"
                    },
                    "title": "Subject alternative names (SAN)",
                    "type": "array"
                },
                "enableAdmissionPlugins": {
                    "default": "NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota,PersistentVolumeClaimResize,DefaultStorageClass,Priority,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook",
                    "description": "Comma-separated list of admission plugins to enable.",
                    "title": "Admission plugins",
                    "type": "string"
                },
                "featureGates": {
                    "default": "TTLAfterFinished=true",
                    "description": "Enabled feature gates, as a comma-separated list.",
                    "title": "Feature gates",
                    "type": "string"
                }
            },
            "required": [
                "enableAdmissionPlugins",
                "featureGates"
            ],
            "title": "Kubernetes API server",
            "type": "object"
        },
        "controlPlane": {
            "properties": {
                "endpoint": {
                    "description": "Kubernetes API configuration.",
                    "properties": {
                        "host": {
                            "title": "Host",
                            "description": "Floating IP for access to the Kubernetes API.",
                            "type": "string"
                        },
                        "port": {
                            "title": "Port number",
                            "description": "Port for access to the Kubernetes API.",
                            "type": "integer"
                        }
                    },
                    "title": "Endpoint",
                    "type": "object"
                },
                "etcd": {
                    "properties": {
                        "imageRepository": {
                            "title": "Image repository",
                            "type": "string"
                        },
                        "imageTag": {
                            "title": "Image tag",
                            "type": "string"
                        }
                    },
                    "title": "Etcd",
                    "type": "object"
                },
                "replicas": {
                    "title": "Number of nodes",
                    "type": "integer"
                }
            },
            "title": "Control plane",
            "type": "object"
        },
        "kubeadm": {
            "properties": {
                "users": {
                    "items": {
                        "properties": {
                            "authorizedKeys": {
                                "items": {
                                    "title": "Key",
                                    "type": "string"
                                },
                                "title": "Authorized keys",
                                "type": "array"
                            },
                            "name": {
                                "title": "Name",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "title": "Users",
                    "type": "array"
                }
            },
            "title": "Kubeadm",
            "type": [
                "null",
                "object"
            ]
        },
        "kubectlImage": {
            "description": "Used by cluster-shared library chart to configure coredns in-cluster.",
            "properties": {
                "name": {
                    "type": "string"
                },
                "registry": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            },
            "title": "Kubectl image",
            "type": "object"
        },
        "network": {
            "properties": {
                "loadBalancersCidrBlocks": {
                    "items": {
                        "description": "IPv4 address range for LoadBalancer IPs, in CIDR notation.",
                        "examples": [
                            "10.10.10.0/24"
                        ],
                        "title": "Load Balancer subnet",
                        "type": "string"
                    },
                    "title": "Load Balancer subnets",
                    "type": "array"
                },
                "podsCidrBlocks": {
                    "items": {
                        "description": "IPv4 address range for pods, in CIDR notation.",
                        "examples": [
                            "192.168.0.0/16"
                        ],
                        "title": "Pod subnet",
                        "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 1,
                    "title": "Pod subnets",
                    "type": "array"
                },
                "servicesCidrBlocks": {
                    "items": {
                        "description": "IPv4 address range for k8s services, in CIDR notation.",
                        "examples": [
                            "192.168.1.0/16"
                        ],
                        "title": "Service subnet",
                        "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 1,
                    "title": "Service subnets",
                    "type": "array"
                }
            },
            "required": [
                "loadBalancersCidrBlocks",
                "podsCidrBlocks",
                "servicesCidrBlocks"
            ],
            "title": "Network",
            "type": "object"
        },
        "organization": {
            "title": "Organization",
            "type": "string"
        },
        "template": {
            "description": "Provisioning options for node templates.",
            "properties": {
                "cloneMode": {
                    "description": "Method used to clone template image.",
                    "title": "Clone mode",
                    "type": "string"
                },
                "diskGiB": {
                    "description": "Node disk size in GB. Must be at least as large as the source image.",
                    "title": "Disk size (GB)",
                    "type": "integer"
                },
                "folder": {
                    "description": "VSphere folder to deploy instances in. Must already exist.",
                    "title": "Folder",
                    "type": "string"
                },
                "memoryMiB": {
                    "description": "Node memory allocation in MB.",
                    "title": "Memory (MB)",
                    "type": "integer"
                },
                "networkName": {
                    "description": "Segment name to attach nodes to. Must already exist.",
                    "title": "Segment name",
                    "type": "string"
                },
                "numCPUs": {
                    "description": "Number of CPUs to assign per node.",
                    "title": "CPU cores",
                    "type": "integer"
                },
                "resourcePool": {
                    "description": "Resource pool to allocate nodes from. Must already exist.",
                    "title": "Resource pool",
                    "type": "string"
                },
                "storagePolicyName": {
                    "description": "Storage policy to use. If specified, it must already exist.",
                    "title": "Storage policy",
                    "type": "string"
                },
                "templateName": {
                    "description": "Image template name to use for nodes.",
                    "title": "Name",
                    "type": "string"
                }
            },
            "title": "Node template",
            "type": "object"
        },
        "vcenter": {
            "description": "Configuration for vSphere API access.",
            "properties": {
                "datacenter": {
                    "description": "Name of the datacenter to deploy nodes into.",
                    "title": "Datacenter",
                    "type": "string"
                },
                "datastore": {
                    "description": "Name of the datastore for node disk storage.",
                    "title": "Datastore",
                    "type": "string"
                },
                "server": {
                    "description": "URL of the VSphere API.",
                    "title": "Server",
                    "type": "string"
                },
                "username": {
                    "description": "Username for the VSphere API.",
                    "title": "Username",
                    "type": "string"
                },
                "password": {
                    "description": "Password for the VSphere API.",
                    "title": "Password",
                    "type": "string"
                },
                "thumbprint": {
                    "description": "TLS certificate signature of the VSphere API.",
                    "title": "Thumbprint",
                    "type": "string"
                },
                "region": {
                    "description": "Category name in VSphere for topology.kubernetes.io/region labels.",
                    "title": "Region",
                    "type": "string"
                },
                "zone": {
                    "description": "Category name in VSphere for topology.kubernetes.io/zone labels.",
                    "title": "Zone",
                    "type": "string"
                }
            },
            "title": "VCenter",
            "type": "object"
        },
        "worker": {
            "properties": {
                "replicas": {
                    "title": "Number of nodes",
                    "type": "integer"
                }
            },
            "title": "Worker",
            "type": "object"
        }
    },
    "type": "object"
}
