{
    "$id": "values.schema.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$defs": {
        "additionalAdmissionPlugins": {
            "type": "array",
            "title": "Additional admission plugins",
            "description": "A list of plugins to enable, in addition to the default ones that include DefaultStorageClass, DefaultTolerationSeconds, LimitRanger, MutatingAdmissionWebhook, NamespaceLifecycle, PersistentVolumeClaimResize, Priority, ResourceQuota, ServiceAccount and ValidatingAdmissionWebhook.",
            "items": {
                "type": "string",
                "title": "Additional admission plugin"
            }
        },
        "app": {
            "type": "object",
            "title": "App resource",
            "description": "Configuration of a default app that is part of the cluster and is deployed as an App resource.",
            "additionalProperties": false,
            "properties": {
                "extraConfigs": {
                    "type": "array",
                    "title": "Extra config maps or secrets",
                    "description": "Extra config maps or secrets that will be used to customize to the app. The desired values must be under configmap or secret key 'values'. The values are merged in the order given, with the later values overwriting earlier, and then inline values overwriting those. Resources must be in the same namespace as the cluster.",
                    "items": {
                        "type": "object",
                        "title": "Config map or secret",
                        "properties": {
                            "kind": {
                                "type": "string",
                                "title": "Kind",
                                "description": "Specifies whether the resource is a config map or a secret.",
                                "enum": [
                                    "configMap",
                                    "secret"
                                ]
                            },
                            "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "Name of the config map or secret. The object must exist in the same namespace as the cluster App."
                            },
                            "priority": {
                                "type": "integer",
                                "title": "Priority",
                                "default": 25,
                                "max": 150,
                                "min": 1
                            }
                        }
                    }
                },
                "values": {
                    "type": "object",
                    "title": "Config map",
                    "description": "Helm Values to be passed to the app as user config.",
                    "additionalProperties": true
                }
            }
        },
        "appEphemeral": {
            "type": "object",
            "title": "Ephemeral app configuration",
            "description": "Non-persistent app configuration that is meant for development and operation purposes only, and can be removed at any point.",
            "additionalProperties": false,
            "properties": {
                "catalogOverride": {
                    "type": "string",
                    "title": "Catalog override",
                    "description": "Name of the catalog from which the app is installed."
                },
                "disable": {
                    "type": "boolean",
                    "title": "Disable",
                    "description": "Flag that indicates if the app is disabled and skipped during the cluster deployment."
                },
                "versionOverride": {
                    "type": "string",
                    "title": "Version override",
                    "description": "Custom application version that overrides the application version from the release. This is usually a new development version that you want to test, or a newer patch version that you need to deploy in order to put out a production fire in the middle of the night. Use carefully!"
                }
            }
        },
        "customNodeTaints": {
            "type": "array",
            "title": "Custom node taints",
            "items": {
                "type": "object",
                "required": [
                    "effect",
                    "key",
                    "value"
                ],
                "properties": {
                    "effect": {
                        "type": "string",
                        "title": "Effect",
                        "enum": [
                            "NoSchedule",
                            "PreferNoSchedule",
                            "NoExecute"
                        ]
                    },
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value"
                    }
                }
            }
        },
        "featureGates": {
            "type": "array",
            "title": "Feature gates",
            "description": "A list of feature gates to enable or disable.",
            "items": {
                "type": "object",
                "title": "Feature gate",
                "description": "A feature gate to enable or disable.",
                "required": [
                    "name",
                    "enabled"
                ],
                "additionalProperties": false,
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "title": "Enabled",
                        "description": "Whether to enable or disable the feature gate."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the feature gate."
                    }
                }
            }
        },
        "fileFromSecret": {
            "type": "object",
            "title": "File from secret",
            "description": "It defines a file with content in a Secret",
            "required": [
                "contentFrom",
                "path",
                "permissions"
            ],
            "properties": {
                "contentFrom": {
                    "type": "object",
                    "title": "Content from",
                    "description": "It specifies where the file content is coming from.",
                    "properties": {
                        "secret": {
                            "type": "object",
                            "title": "Secret",
                            "description": "Kubernetes Secret resource with the file content.",
                            "required": [
                                "key",
                                "name"
                            ],
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "title": "Key",
                                    "description": "Secret key where the file content is."
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "description": "Name of the Secret resource."
                                },
                                "prependClusterNameAsPrefix": {
                                    "type": "boolean",
                                    "title": "Prepend cluster name as name prefix",
                                    "description": "Prepend cluster name as name prefix in order to use a unique secret name."
                                }
                            }
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "title": "Path",
                    "description": "File path on the node."
                },
                "permissions": {
                    "type": "string",
                    "title": "Permissions",
                    "description": "File permissions in form 0644",
                    "default": "0644"
                }
            }
        },
        "filesystems": {
            "type": "array",
            "title": "File systems",
            "description": "Filesystems specifies the list of file systems to setup.",
            "items": {
                "type": "object",
                "required": [
                    "device",
                    "filesystem"
                ],
                "properties": {
                    "device": {
                        "type": "string",
                        "title": "Device",
                        "description": "The absolute path to the device. Devices are typically referenced by the /dev/disk/by-* symlinks."
                    },
                    "extraOpts": {
                        "type": "array",
                        "title": "Extra options",
                        "description": "ExtraOpts defined extra options to add to the command for creating the filesystem.",
                        "items": {
                            "type": "string",
                            "description": "An additional option to be passed to the format-specific mkfs utility.",
                            "name": "Option"
                        }
                    },
                    "filesystem": {
                        "type": "string",
                        "title": "Format",
                        "description": "The filesystem format (ext4, btrfs, or xfs).",
                        "enum": [
                            "ext4",
                            "btrfs",
                            "xfs"
                        ]
                    },
                    "label": {
                        "type": "string",
                        "title": "Label",
                        "description": "The label of the filesystem."
                    },
                    "overwrite": {
                        "type": "boolean",
                        "title": "Overwrite",
                        "description": "Overwrite defines whether or not to overwrite any existing filesystem. If true, any pre-existing file system will be destroyed. Use with Caution."
                    },
                    "partition": {
                        "type": "string",
                        "title": "Partition",
                        "description": "Partition specifies the partition to use. The valid options are: 'auto|any', 'auto', 'any', 'none', and <NUM>, where NUM is the actual partition number."
                    },
                    "replaceFS": {
                        "type": "string",
                        "title": "Replace filesystem",
                        "description": "ReplaceFS is a special directive, used for Microsoft Azure that instructs cloud-init to replace a file system of <FS_TYPE>. NOTE: unless you define a label, this requires the use of the 'any' partition directive."
                    }
                }
            }
        },
        "gvk": {
            "type": "object",
            "title": "Schema for Kubernetes API group, version and kind",
            "description": "It can be used to specify which CustomResourceDefinition is used.",
            "required": [
                "group",
                "version",
                "kind"
            ],
            "properties": {
                "group": {
                    "type": "string",
                    "title": "API group",
                    "examples": [
                        "cluster.x-k8s.io",
                        "controlplane.cluster.x-k8s.io",
                        "infrastructure.cluster.x-k8s.io"
                    ]
                },
                "kind": {
                    "type": "string",
                    "title": "API kind",
                    "examples": [
                        "Cluster",
                        "KubeadmControlPlane"
                    ]
                },
                "version": {
                    "type": "string",
                    "title": "API version",
                    "examples": [
                        "v1alpha1",
                        "v1alpha2",
                        "v1beta1",
                        "v1"
                    ]
                }
            }
        },
        "helmRelease": {
            "type": "object",
            "title": "App",
            "description": "Configuration of a default app that is part of the cluster and is deployed as a HelmRelease resource.",
            "additionalProperties": false,
            "properties": {
                "extraConfigs": {
                    "type": "array",
                    "title": "Extra config maps or secrets",
                    "description": "Extra config maps or secrets that will be used to customize to the app. The desired values must be under configmap or secret key 'values'. The values are merged in the order given, with the later values overwriting earlier, and then inline values overwriting those. Resources must be in the same namespace as the cluster.",
                    "items": {
                        "type": "object",
                        "title": "Config map or secret",
                        "properties": {
                            "kind": {
                                "type": "string",
                                "title": "Kind",
                                "description": "Specifies whether the resource is a config map or a secret.",
                                "enum": [
                                    "ConfigMap",
                                    "Secret"
                                ]
                            },
                            "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "Name of the config map or secret. The object must exist in the same namespace as the cluster App."
                            },
                            "optional": {
                                "type": "boolean",
                                "title": "Optional",
                                "description": "Optional marks this ValuesReference as optional. When set, a not found error for the values reference is ignored, but any ValuesKey, TargetPath or transient error will still result in a reconciliation failure."
                            }
                        }
                    }
                },
                "values": {
                    "type": "object",
                    "title": "Values",
                    "description": "Values to be passed to the app. Values will have higher priority than values from configmaps.",
                    "additionalProperties": true
                }
            }
        },
        "ignition": {
            "type": "object",
            "title": "Ignition",
            "description": "Ignition-specific configuration.",
            "properties": {
                "containerLinuxConfig": {
                    "type": "object",
                    "title": "Container Linux configuration",
                    "properties": {
                        "additionalConfig": {
                            "type": "object",
                            "title": "Additional config",
                            "description": "Additional configuration to be merged with the Ignition. More info: https://coreos.github.io/ignition/operator-notes/#config-merging.",
                            "properties": {
                                "storage": {
                                    "type": "object",
                                    "title": "Storage",
                                    "description": "It describes the desired state of the system’s storage devices.",
                                    "properties": {
                                        "directories": {
                                            "type": "array",
                                            "title": "Directories",
                                            "description": "The list of directories to be created.",
                                            "items": {
                                                "type": "object",
                                                "title": "Directory",
                                                "description": "The directory to be created.",
                                                "required": [
                                                    "path"
                                                ],
                                                "properties": {
                                                    "filesystem": {
                                                        "type": "string",
                                                        "title": "Filesystem",
                                                        "description": "The internal identifier of the filesystem in which to create the directory. This matches the last filesystem with the given identifier."
                                                    },
                                                    "group": {
                                                        "type": "object",
                                                        "title": "Group",
                                                        "description": "It specifies the group of the owner.",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "title": "ID",
                                                                "description": "The group ID of the owner."
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "title": "Name",
                                                                "description": "The group name of the owner."
                                                            }
                                                        }
                                                    },
                                                    "mode": {
                                                        "type": "integer",
                                                        "title": "Mode",
                                                        "description": "The directory’s permission mode."
                                                    },
                                                    "overwrite": {
                                                        "type": "boolean",
                                                        "title": "Overwrite",
                                                        "description": "Whether to delete preexisting nodes at the path."
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "title": "Path",
                                                        "description": "The absolute path to the directory."
                                                    },
                                                    "user": {
                                                        "type": "object",
                                                        "title": "User",
                                                        "description": "It specifies the directory’s owner.",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "title": "ID",
                                                                "description": "The user ID of the owner."
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "title": "Name",
                                                                "description": "The user name of the owner."
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "disks": {
                                            "type": "array",
                                            "title": "Disks",
                                            "description": "The list of disks to be configured and/or used.",
                                            "items": {
                                                "type": "object",
                                                "title": "Disk",
                                                "description": "The ddisk to be configured and/or used.",
                                                "required": [
                                                    "device",
                                                    "partitions"
                                                ],
                                                "properties": {
                                                    "device": {
                                                        "type": "string",
                                                        "title": "device",
                                                        "description": "The path of the device."
                                                    },
                                                    "partitions": {
                                                        "type": "array",
                                                        "title": "Partitions",
                                                        "description": "The list of partitions to be configured and/or used.",
                                                        "items": {
                                                            "type": "object",
                                                            "title": "Partition",
                                                            "description": "The partition to be configured and/or used.",
                                                            "required": [
                                                                "number"
                                                            ],
                                                            "properties": {
                                                                "number": {
                                                                    "type": "integer",
                                                                    "title": "Number",
                                                                    "description": "The number of the partition."
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "filesystems": {
                                            "type": "array",
                                            "title": "File systems",
                                            "description": "The list of filesystems to be configured and/or used in the “files” section. Either “mount” or “path” needs to be specified.",
                                            "items": {
                                                "type": "object",
                                                "title": "File system",
                                                "description": "The filesystem to be configured and/or used in the “files” section. Either “mount” or “path” needs to be specified.",
                                                "properties": {
                                                    "mount": {
                                                        "type": "object",
                                                        "title": "Mount",
                                                        "description": "It contains the set of mount and formatting options for the filesystem. A non-null entry indicates that the filesystem should be mounted before it is used by Ignition.",
                                                        "required": [
                                                            "device",
                                                            "format"
                                                        ],
                                                        "properties": {
                                                            "device": {
                                                                "type": "string",
                                                                "title": "Device",
                                                                "description": "The absolute path to the device. Devices are typically referenced by the /dev/disk/by-* symlinks."
                                                            },
                                                            "format": {
                                                                "type": "string",
                                                                "title": "Format",
                                                                "description": "The filesystem format (ext4, btrfs, or xfs).",
                                                                "enum": [
                                                                    "ext4",
                                                                    "btrfs",
                                                                    "xfs"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "title": "Label",
                                                                "description": "The label of the filesystem."
                                                            },
                                                            "options": {
                                                                "type": "array",
                                                                "title": "Options",
                                                                "description": "Any additional options to be passed to the format-specific mkfs utility.",
                                                                "items": {
                                                                    "type": "string",
                                                                    "description": "An additional option to be passed to the format-specific mkfs utility.",
                                                                    "name": "Option"
                                                                }
                                                            },
                                                            "uuid": {
                                                                "type": "string",
                                                                "title": "UUID",
                                                                "description": "The uuid of the filesystem."
                                                            },
                                                            "wipeFilesystem": {
                                                                "type": "boolean",
                                                                "title": "Wipe filesystem",
                                                                "description": "Whether or not to wipe the device before filesystem creation, see Ignition’s documentation on filesystems for more information https://github.com/coreos/ignition/blob/main/docs/operator-notes.md#filesystem-reuse-semantics."
                                                            }
                                                        }
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "title": "Name",
                                                        "description": "The identifier for the filesystem, internal to Ignition. This is only required if the filesystem needs to be referenced in the “files” section."
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "title": "Path",
                                                        "description": "The mount-point of the filesystem. A non-null entry indicates that the filesystem has already been mounted by the system at the specified path. This is really only useful for “/sysroot”."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "systemd": {
                                    "type": "object",
                                    "title": "systemd",
                                    "description": "It describes the desired state of the systemd units.",
                                    "properties": {
                                        "units": {
                                            "type": "array",
                                            "title": "Units",
                                            "items": {
                                                "$ref": "#/$defs/systemdUnit"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "strict": {
                            "type": "boolean",
                            "title": "Strict",
                            "description": "It controls if AdditionalConfig should be strictly parsed. If so, warnings are treated as errors."
                        }
                    }
                }
            }
        },
        "infrastructureCluster": {
            "type": "object",
            "title": "Infrastructure cluster",
            "description": "Group, version and kind of provider-specific infrastructure cluster resource.",
            "required": [
                "group",
                "version",
                "kind"
            ],
            "additionalProperties": false,
            "properties": {
                "group": {
                    "type": "string",
                    "title": "API group",
                    "examples": [
                        "infrastructure.cluster.x-k8s.io"
                    ]
                },
                "kind": {
                    "type": "string",
                    "title": "API kind",
                    "examples": [
                        "AWSCluster",
                        "AzureCluster",
                        "VCDCluster",
                        "VSphereCluster"
                    ]
                },
                "version": {
                    "type": "string",
                    "title": "API version",
                    "examples": [
                        "v1alpha1",
                        "v1beta1",
                        "v1beta2",
                        "v1",
                        "v2"
                    ]
                }
            }
        },
        "infrastructureMachinePool": {
            "type": "object",
            "title": "Infrastructure MachinePool",
            "description": "Group, version and kind of provider-specific infrastructure MachinePool resource.",
            "required": [
                "group",
                "version",
                "kind"
            ],
            "additionalProperties": false,
            "properties": {
                "group": {
                    "type": "string",
                    "title": "API group",
                    "examples": [
                        "infrastructure.cluster.x-k8s.io"
                    ]
                },
                "kind": {
                    "type": "string",
                    "title": "API kind",
                    "examples": [
                        "AWSMachinePool",
                        "AzureMachinePool"
                    ]
                },
                "version": {
                    "type": "string",
                    "title": "API version",
                    "examples": [
                        "v1alpha1",
                        "v1beta1",
                        "v1beta2",
                        "v1",
                        "v2"
                    ]
                }
            }
        },
        "infrastructureMachineTemplate": {
            "type": "object",
            "title": "Infrastructure Machine template",
            "description": "Group, version and kind of provider-specific infrastructure Machine template resource.",
            "required": [
                "group",
                "version",
                "kind"
            ],
            "additionalProperties": false,
            "properties": {
                "group": {
                    "type": "string",
                    "title": "API group",
                    "examples": [
                        "infrastructure.cluster.x-k8s.io"
                    ]
                },
                "kind": {
                    "type": "string",
                    "title": "API kind",
                    "examples": [
                        "AWSMachineTemplate",
                        "AzureMachineTemplate"
                    ]
                },
                "version": {
                    "type": "string",
                    "title": "API version",
                    "examples": [
                        "v1alpha1",
                        "v1beta1",
                        "v1beta2",
                        "v1",
                        "v2"
                    ]
                }
            }
        },
        "machineHealthCheck": {
            "type": "object",
            "title": "Machine health check",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "title": "Enable",
                    "default": true
                },
                "maxUnhealthy": {
                    "type": "string",
                    "title": "Maximum unhealthy nodes",
                    "examples": [
                        "40%"
                    ],
                    "default": "40%"
                },
                "nodeStartupTimeout": {
                    "type": "string",
                    "title": "Node startup timeout",
                    "description": "Determines how long a machine health check should wait for a node to join the cluster, before considering a machine unhealthy.",
                    "examples": [
                        "10m",
                        "100s"
                    ],
                    "default": "8m0s"
                },
                "unhealthyNotReadyTimeout": {
                    "type": "string",
                    "title": "Timeout for ready",
                    "description": "If a node is not in condition 'Ready' after this timeout, it will be considered unhealthy.",
                    "examples": [
                        "300s"
                    ],
                    "default": "10m0s"
                },
                "unhealthyUnknownTimeout": {
                    "type": "string",
                    "title": "Timeout for unknown condition",
                    "description": "If a node is in 'Unknown' condition after this timeout, it will be considered unhealthy.",
                    "examples": [
                        "300s"
                    ],
                    "default": "10m0s"
                }
            }
        },
        "mounts": {
            "type": "array",
            "title": "Additional mounts",
            "description": "Mounts specifies a list of mount points to be setup.",
            "items": {
                "type": "string"
            }
        },
        "nodePool": {
            "type": "object",
            "title": "Node pool",
            "properties": {
                "annotations": {
                    "type": "object",
                    "title": "Annotations",
                    "description": "These annotations are added to all Kubernetes resources defining this node pool.",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^([a-zA-Z0-9/\\.-]{1,253}/)?[a-zA-Z0-9/\\._-]{1,63}$": {
                            "type": "string",
                            "title": "Annotation",
                            "minLength": 1
                        }
                    }
                },
                "customNodeLabels": {
                    "type": "array",
                    "title": "Node labels. Deprecated: use nodeLabels instead.",
                    "description": "Labels that are passed to kubelet argument 'node-labels'.",
                    "items": {
                        "type": "string",
                        "title": "Label"
                    }
                },
                "customNodeTaints": {
                    "type": "array",
                    "title": "Custom node taints. Deprecated: use nodeTaints instead.",
                    "items": {
                        "type": "object",
                        "required": [
                            "effect",
                            "key",
                            "value"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "effect": {
                                "type": "string",
                                "title": "Effect",
                                "enum": [
                                    "NoSchedule",
                                    "PreferNoSchedule",
                                    "NoExecute"
                                ]
                            },
                            "key": {
                                "type": "string",
                                "title": "Key"
                            },
                            "value": {
                                "type": "string",
                                "title": "Value"
                            }
                        }
                    }
                },
                "labels": {
                    "type": "object",
                    "title": "Labels",
                    "description": "These labels are added to all Kubernetes resources defining this node pool.",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-zA-Z0-9/\\._-]+$": {
                            "type": "string",
                            "title": "Label",
                            "maxLength": 63,
                            "minLength": 0,
                            "pattern": "^[a-zA-Z0-9/\\._-]*$"
                        }
                    }
                },
                "machineHealthCheck": {
                    "$ref": "#/$defs/machineHealthCheck",
                    "title": "Machine health check"
                },
                "maxSize": {
                    "type": "integer",
                    "title": "Max size",
                    "description": "Maximum number of node pool nodes",
                    "maximum": 1000,
                    "minimum": 0
                },
                "minSize": {
                    "type": "integer",
                    "title": "Min size",
                    "description": "Minimum number of node pool nodes",
                    "maximum": 1000,
                    "minimum": 0
                },
                "replicas": {
                    "type": "integer",
                    "title": "Replicas",
                    "description": "The number of node pool nodes.",
                    "maximum": 1000,
                    "minimum": 0
                }
            }
        },
        "postKubeadmCommands": {
            "type": "array",
            "title": "Post-kubeadm commands",
            "description": "Extra commands to run after kubeadm runs.",
            "items": {
                "type": "string"
            }
        },
        "preKubeadmCommands": {
            "type": "array",
            "title": "Pre-kubeadm commands",
            "description": "Extra commands to run before kubeadm runs.",
            "items": {
                "type": "string"
            }
        },
        "providerIntegrationAppConfig": {
            "type": "object",
            "title": "Provider integration app config",
            "description": "App config used to additionally configure an app for a specific provider",
            "additionalProperties": false,
            "properties": {
                "configTemplateName": {
                    "type": "string",
                    "title": "Config template name",
                    "description": "Name of the Helm template that has provider-specific app config. Provider-specific app config overrides provider-independent app config, while custom user config overrides both provider-independent and provider-specific default app config."
                },
                "enable": {
                    "type": "boolean",
                    "title": "Enable",
                    "description": "Flag that indicates if an app is enabled for a provider. It is false by default, which allows for more incremental and safer adoption of the cluster chart.",
                    "default": false
                }
            }
        },
        "systemdUnit": {
            "type": "object",
            "title": "systemd unit",
            "required": [
                "name"
            ],
            "additionalProperties": false,
            "properties": {
                "contents": {
                    "type": "object",
                    "title": "Contents",
                    "description": "The contents of the unit.",
                    "properties": {
                        "install": {
                            "type": "object",
                            "title": "Install",
                            "description": "Configuration of the [Install] section.",
                            "additionalProperties": false,
                            "properties": {
                                "wantedBy": {
                                    "type": "array",
                                    "title": "WantedBy",
                                    "description": "Units with (weak) requirement dependencies on this unit.",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "mount": {
                            "type": "object",
                            "title": "Mount",
                            "description": "Configuration of the [Mount] section.",
                            "additionalProperties": false,
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "title": "Type",
                                    "description": "A file system type to mount."
                                },
                                "what": {
                                    "type": "string",
                                    "title": "What",
                                    "description": "An absolute path of a device node, file or other resource to mount."
                                },
                                "where": {
                                    "type": "string",
                                    "title": "Where",
                                    "description": "An absolute path of a file or directory for the mount point; in particular, the destination cannot be a symbolic link."
                                }
                            }
                        },
                        "unit": {
                            "type": "object",
                            "title": "Unit",
                            "description": "Configuration of the [Unit] section.",
                            "required": [
                                "description"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "title": "Description",
                                    "description": "systemd unit description."
                                },
                                "defaultDependencies": {
                                    "type": "boolean",
                                    "title": "DefaultDependencies",
                                    "description": "Flag that indicates if this systemd unit should have the default systemd unit dependencies."
                                }
                            }
                        }
                    }
                },
                "dropins": {
                    "type": "array",
                    "title": "Unit drop-ins",
                    "description": "The list of drop-ins for the unit",
                    "items": {
                        "type": "object",
                        "title": "Unit drop-in",
                        "required": [
                            "name"
                        ],
                        "properties": {
                            "contents": {
                                "type": "string",
                                "title": "Contents",
                                "description": "The contents of the drop-in."
                            },
                            "name": {
                                "type": "string",
                                "title": "Name",
                                "description": "The name of the drop-in. This must be suffixed with “.conf”",
                                "pattern": "^.+\\.conf$"
                            }
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "title": "Enabled?",
                    "description": "Whether or not the service shall be enabled. When true, the service is enabled. When false, the service is disabled. When omitted, the service is unmodified. In order for this to have any effect, the unit must have an install section."
                },
                "mask": {
                    "type": "boolean",
                    "title": "Masked?",
                    "description": "Whether or not the service shall be masked. When true, the service is masked by symlinking it to /dev/null."
                },
                "name": {
                    "type": "string",
                    "title": "Name",
                    "description": "The name of the unit. This must be suffixed with a valid unit type (e.g. “thing.service”)."
                }
            }
        }
    },
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "global": {
            "type": "object",
            "title": "Global properties",
            "description": "Properties that are available to all charts and subcharts.",
            "required": [
                "components",
                "connectivity",
                "controlPlane",
                "metadata"
            ],
            "additionalProperties": true,
            "properties": {
                "apps": {
                    "type": "object",
                    "title": "Apps",
                    "description": "Configuration of apps that are part of the cluster.",
                    "additionalProperties": false,
                    "patternProperties": {
                        "[a-z][a-zA-Z]+": {
                            "type": "object",
                            "title": "App configurations from parent chart",
                            "description": "Not used in this chart. This is here to keep the schemas compatible."
                        }
                    },
                    "properties": {
                        "capiNodeLabeler": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "capi-node-labeler",
                            "description": "Configuration of capi-node-labeler. For all available values see https://github.com/giantswarm/capi-node-labeler."
                        },
                        "certExporter": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "cert-exporter",
                            "description": "Configuration of cert-exporter. For all available values see https://github.com/giantswarm/cert-exporter."
                        },
                        "certManager": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "cert-manager",
                            "description": "Configuration of cert-manager. For all available values see https://github.com/giantswarm/cert-manager-app."
                        },
                        "chartOperatorExtensions": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "chart-operator-extensions",
                            "description": "Configuration of chart-operator-extensions. For all available values see https://github.com/giantswarm/chart-operator-extensions."
                        },
                        "cilium": {
                            "$ref": "#/$defs/helmRelease",
                            "type": "object",
                            "title": "Cilium",
                            "description": "Configuration of cilium-app. For all available values see https://github.com/giantswarm/cilium-app."
                        },
                        "ciliumServiceMonitors": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "Cilium service monitors",
                            "description": "Configuration of cilium-servicemonitors. For all available values see https://github.com/giantswarm/cilium-servicemonitors-app."
                        },
                        "clusterAutoscaler": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "cluster-autoscaler",
                            "description": "Configuration of cluster-autoscaler. For all available values see https://github.com/giantswarm/cluster-autoscaler-app."
                        },
                        "coreDns": {
                            "$ref": "#/$defs/helmRelease",
                            "type": "object",
                            "title": "CoreDNS",
                            "description": "Configuration of coredns-app. For all available values see https://github.com/giantswarm/coredns-app."
                        },
                        "etcdKubernetesResourcesCountExporter": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "etcd-kubernetes-resources-count-exporter",
                            "description": "Configuration of etcd-kubernetes-resources-count-exporter. For all available values see https://github.com/giantswarm/etcd-kubernetes-resources-count-exporter."
                        },
                        "externalDns": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "external-dns",
                            "description": "Configuration of external-dns. For all available values see https://github.com/giantswarm/external-dns-app."
                        },
                        "giantswarmClusterSuite": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "giantswarm-cluster-suite",
                            "description": "Configuration of giantswarm-cluster-suite. For all available values see https://github.com/giantswarm/giantswarm-cluster-suite."
                        },
                        "k8sAuditMetrics": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "k8s-audit-metrics",
                            "description": "Configuration of k8s-audit-metrics. For all available values see https://github.com/giantswarm/k8s-audit-metrics."
                        },
                        "k8sDnsNodeCache": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "k8s-dns-node-cache",
                            "description": "Configuration of k8s-dns-node-cache. For all available values see https://github.com/giantswarm/k8s-dns-node-cache-app."
                        },
                        "metricsServer": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "metrics-server",
                            "description": "Configuration of metrics-server. For all available values see https://github.com/giantswarm/metrics-server-app."
                        },
                        "netExporter": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "net-exporter",
                            "description": "Configuration of net-exporter. For all available values see https://github.com/giantswarm/net-exporter."
                        },
                        "networkPolicies": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "NetworkPolicies",
                            "description": "Configuration of network-policies-app. For all available values see https://github.com/giantswarm/network-policies-app."
                        },
                        "nodeExporter": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "node-exporter",
                            "description": "Configuration of node-exporter. For all available values see https://github.com/giantswarm/node-exporter-app."
                        },
                        "observabilityBundle": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "observability-bundle",
                            "description": "Configuration of observability-bundle. For all available values see https://github.com/giantswarm/observability-bundle."
                        },
                        "prometheusBlackboxExporter": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "prometheus-blackbox-exporter",
                            "description": "Configuration of prometheus-blackbox-exporter. For all available values see https://github.com/giantswarm/prometheus-blackbox-exporter-app."
                        },
                        "securityBundle": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "security-bundle",
                            "description": "Configuration of security-bundle. For all available values see https://github.com/giantswarm/security-bundle."
                        },
                        "teleportKubeAgent": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "teleport-kube-agent",
                            "description": "Configuration of teleport-kube-agent. For all available values see https://github.com/giantswarm/teleport-kube-agent."
                        },
                        "verticalPodAutoscaler": {
                            "$ref": "#/$defs/app",
                            "type": "object",
                            "title": "vertical-pod-autoscaler",
                            "description": "Configuration of vertical-pod-autoscaler. For all available values see https://github.com/giantswarm/vertical-pod-autoscaler-app."
                        },
                        "verticalPodAutoscalerCrd": {
                            "$ref": "#/$defs/helmRelease",
                            "type": "object",
                            "title": "Vertical-pod-autoscaler CRD",
                            "description": "Configuration of vertical-pod-autoscaler-crd-app. For all available values see https://github.com/giantswarm/vertical-pod-autoscaler-crd."
                        }
                    }
                },
                "components": {
                    "type": "object",
                    "title": "Components",
                    "description": "Advanced configuration of components that are running on all nodes.",
                    "additionalProperties": false,
                    "properties": {
                        "containerd": {
                            "type": "object",
                            "title": "Containerd",
                            "description": "Configuration of containerd.",
                            "required": [
                                "containerRegistries"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "containerRegistries": {
                                    "type": "object",
                                    "title": "Container registries",
                                    "description": "Endpoints and credentials configuration for container registries.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "title": "Registries",
                                        "description": "Container registries and mirrors",
                                        "items": {
                                            "type": "object",
                                            "title": "Registry",
                                            "required": [
                                                "endpoint"
                                            ],
                                            "properties": {
                                                "credentials": {
                                                    "type": "object",
                                                    "title": "Credentials",
                                                    "properties": {
                                                        "auth": {
                                                            "type": "string",
                                                            "title": "Auth",
                                                            "description": "Base64-encoded string from the concatenation of the username, a colon, and the password."
                                                        },
                                                        "identitytoken": {
                                                            "type": "string",
                                                            "title": "Identity token",
                                                            "description": "Used to authenticate the user and obtain an access token for the registry."
                                                        },
                                                        "password": {
                                                            "type": "string",
                                                            "title": "Password",
                                                            "description": "Used to authenticate for the registry with username/password."
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "title": "Username",
                                                            "description": "Used to authenticate for the registry with username/password."
                                                        }
                                                    }
                                                },
                                                "endpoint": {
                                                    "type": "string",
                                                    "title": "Endpoint",
                                                    "description": "Endpoint for the container registry."
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "docker.io": [
                                            {
                                                "endpoint": "registry-1.docker.io"
                                            },
                                            {
                                                "endpoint": "giantswarm.azurecr.io"
                                            }
                                        ]
                                    }
                                },
                                "localRegistryCache": {
                                    "type": "object",
                                    "title": "Local registry cache",
                                    "description": "Caching container registry within the cluster.",
                                    "required": [
                                        "enabled",
                                        "port"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "title": "Enable",
                                            "description": "Enabling this will deploy the Zot registry service in the cluster. To make use of it as a pull-through cache, you also have to specify registries to cache images for.",
                                            "default": false
                                        },
                                        "mirroredRegistries": {
                                            "type": "array",
                                            "title": "Registries to cache",
                                            "description": "Here you must specify each registry to cache container images for. Please also make sure to have an entry for each registry in Global > Components > Containerd > Container registries.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "default": []
                                        },
                                        "port": {
                                            "type": "integer",
                                            "title": "Service port",
                                            "description": "NodePort used by the local registry service.",
                                            "default": 32767
                                        }
                                    }
                                }
                            }
                        },
                        "selinux": {
                            "type": "object",
                            "title": "SELinux",
                            "description": "Configuration of SELinux.",
                            "required": [
                                "mode"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "mode": {
                                    "type": "string",
                                    "title": "SELinux mode",
                                    "description": "Configure SELinux mode: 'enforcing', 'permissive' or 'disabled'.",
                                    "enum": [
                                        "enforcing",
                                        "permissive",
                                        "disabled"
                                    ],
                                    "default": "permissive"
                                }
                            }
                        }
                    }
                },
                "connectivity": {
                    "type": "object",
                    "title": "Connectivity",
                    "description": "Configuration of connectivity and networking options.",
                    "required": [
                        "baseDomain",
                        "network"
                    ],
                    "properties": {
                        "baseDomain": {
                            "type": "string",
                            "title": "Base DNS domain"
                        },
                        "bastion": {
                            "type": "object",
                            "title": "Bastion host",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enable",
                                    "default": true
                                },
                                "replicas": {
                                    "type": "integer",
                                    "title": "Number of hosts",
                                    "default": 1
                                }
                            }
                        },
                        "network": {
                            "type": "object",
                            "title": "Network",
                            "required": [
                                "pods",
                                "services"
                            ],
                            "properties": {
                                "allowAllEgress": {
                                    "type": "boolean",
                                    "title": "Allow all egress",
                                    "default": false
                                },
                                "pods": {
                                    "type": "object",
                                    "title": "Pods",
                                    "required": [
                                        "cidrBlocks"
                                    ],
                                    "properties": {
                                        "cidrBlocks": {
                                            "type": "array",
                                            "title": "Pod subnets",
                                            "items": {
                                                "type": "string",
                                                "title": "Pod subnet",
                                                "description": "IPv4 address range for pods, in CIDR notation.",
                                                "examples": [
                                                    "10.244.0.0/16"
                                                ]
                                            },
                                            "default": [
                                                "100.64.0.0/12"
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1
                                        }
                                    }
                                },
                                "services": {
                                    "type": "object",
                                    "title": "Services",
                                    "required": [
                                        "cidrBlocks"
                                    ],
                                    "properties": {
                                        "cidrBlocks": {
                                            "type": "array",
                                            "title": "Kubernetes Service subnets",
                                            "items": {
                                                "type": "string",
                                                "title": "Service subnet",
                                                "description": "IPv4 address range for kubernetes services, in CIDR notation.",
                                                "examples": [
                                                    "172.31.0.0/16"
                                                ]
                                            },
                                            "default": [
                                                "172.31.0.0/16"
                                            ],
                                            "maxItems": 1,
                                            "minItems": 1
                                        }
                                    }
                                }
                            }
                        },
                        "proxy": {
                            "type": "object",
                            "title": "Proxy",
                            "description": "Whether/how outgoing traffic is routed through proxy servers.",
                            "required": [
                                "enabled"
                            ],
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enable"
                                },
                                "httpProxy": {
                                    "type": "string",
                                    "title": "HTTP proxy",
                                    "description": "To be passed to the HTTP_PROXY environment variable in all hosts."
                                },
                                "httpsProxy": {
                                    "type": "string",
                                    "title": "HTTPS proxy",
                                    "description": "To be passed to the HTTPS_PROXY environment variable in all hosts."
                                },
                                "noProxy": {
                                    "type": "string",
                                    "title": "No proxy",
                                    "description": "Comma-separated addresses to be passed to the NO_PROXY environment variable in all hosts."
                                }
                            },
                            "default": {
                                "enabled": false
                            }
                        }
                    }
                },
                "controlPlane": {
                    "type": "object",
                    "title": "Control plane",
                    "description": "Configuration of the control plane.",
                    "required": [
                        "machineHealthCheck",
                        "replicas"
                    ],
                    "properties": {
                        "apiServerPort": {
                            "type": "integer",
                            "title": "API server port",
                            "description": "The API server Load Balancer port. This option sets the Spec.ClusterNetwork.APIServerPort field on the Cluster CR. In CAPI this field isn't used currently. It is instead used in providers. In CAPA this sets only the public facing port of the Load Balancer. In CAPZ both the public facing and the destination port are set to this value. CAPV and CAPVCD do not use it.",
                            "default": 6443,
                            "maximum": 65535,
                            "minimum": 0
                        },
                        "customNodeTaints": {
                            "$ref": "#/$defs/customNodeTaints"
                        },
                        "machineHealthCheck": {
                            "$ref": "#/$defs/machineHealthCheck"
                        },
                        "oidc": {
                            "type": "object",
                            "title": "OIDC authentication",
                            "properties": {
                                "caPem": {
                                    "type": "string",
                                    "title": "Certificate authority",
                                    "description": "Identity provider's CA certificate in PEM format."
                                },
                                "clientId": {
                                    "type": "string",
                                    "title": "Client ID"
                                },
                                "groupsClaim": {
                                    "type": "string",
                                    "title": "Groups claim"
                                },
                                "issuerUrl": {
                                    "type": "string",
                                    "title": "Issuer URL",
                                    "description": "Exact issuer URL that will be included in identity tokens."
                                },
                                "usernameClaim": {
                                    "type": "string",
                                    "title": "Username claim"
                                }
                            }
                        },
                        "replicas": {
                            "type": "integer",
                            "title": "Replicas",
                            "description": "The number of control plane nodes.",
                            "enum": [
                                1,
                                3,
                                5
                            ],
                            "default": 3
                        }
                    }
                },
                "managementCluster": {
                    "type": "string",
                    "title": "Management cluster",
                    "description": "Name of the Cluster API cluster managing this workload cluster."
                },
                "metadata": {
                    "type": "object",
                    "title": "Metadata",
                    "required": [
                        "name",
                        "organization",
                        "servicePriority"
                    ],
                    "properties": {
                        "description": {
                            "type": "string",
                            "title": "Cluster description",
                            "description": "User-friendly description of the cluster's purpose."
                        },
                        "annotations": {
                            "type": "object",
                            "title": "Annotations",
                            "description": "These annotations are added to all Kubernetes resources defining this cluster.",
                            "additionalProperties": false,
                            "patternProperties": {
                                "^([a-zA-Z0-9/\\.-]{1,253}/)?[a-zA-Z0-9/\\._-]{1,63}$": {
                                    "type": "string",
                                    "title": "Annotation",
                                    "minLength": 1
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "title": "Labels",
                            "description": "These labels are added to all Kubernetes resources defining this cluster.",
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[a-zA-Z0-9/\\._-]+$": {
                                    "type": "string",
                                    "title": "Label",
                                    "maxLength": 63,
                                    "minLength": 0,
                                    "pattern": "^[a-zA-Z0-9/\\._-]*$"
                                }
                            }
                        },
                        "name": {
                            "type": "string",
                            "title": "Cluster name",
                            "description": "Unique identifier, cannot be changed after creation.",
                            "readOnly": true
                        },
                        "organization": {
                            "type": "string",
                            "title": "Organization",
                            "description": "The name of organization that owns the cluster.",
                            "readOnly": true
                        },
                        "preventDeletion": {
                            "type": "boolean",
                            "title": "Prevent cluster deletion",
                            "description": "Setting this to true will set giantswarm.io/prevent-deletion label to true, which will block cluster deletion.",
                            "default": false
                        },
                        "servicePriority": {
                            "type": "string",
                            "title": "Service priority",
                            "description": "The relative importance of this cluster.",
                            "$comment": "Defined in https://github.com/giantswarm/rfc/tree/main/classify-cluster-priority",
                            "enum": [
                                "highest",
                                "medium",
                                "lowest"
                            ],
                            "default": "highest"
                        }
                    }
                },
                "nodePools": {
                    "type": "object",
                    "title": "Node pools",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-z0-9][-a-z0-9]{3,18}[a-z0-9]$": {
                            "$ref": "#/$defs/nodePool"
                        }
                    }
                },
                "podSecurityStandards": {
                    "type": "object",
                    "title": "Pod Security Standards",
                    "properties": {
                        "enforced": {
                            "type": "boolean",
                            "title": "Enforced",
                            "default": false
                        }
                    }
                },
                "release": {
                    "type": "object",
                    "title": "Release",
                    "description": "Information about the workload cluster release.",
                    "properties": {
                        "version": {
                            "type": "string",
                            "title": "Version"
                        }
                    }
                }
            }
        },
        "internal": {
            "type": "object",
            "title": "Internal",
            "description": "For Giant Swarm internal use only, not stable, or not supported by UIs.",
            "properties": {
                "advancedConfiguration": {
                    "type": "object",
                    "title": "Advanced configuration",
                    "description": "Advanced configuration of cluster components, to be configured by Giant Swarm staff only.",
                    "required": [
                        "cgroupsv1"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "appPlatform": {
                            "type": "object",
                            "title": "App Platform",
                            "description": "Advanced configuration of App Platform.",
                            "properties": {
                                "fluxBackend": {
                                    "type": "boolean",
                                    "title": "Flux Backend",
                                    "description": "Use Flux as App Platform backend for installing apps.",
                                    "default": false
                                }
                            }
                        },
                        "cgroupsv1": {
                            "type": "boolean",
                            "title": "CGroups v1",
                            "description": "Force use of CGroups v1 for whole cluster.",
                            "default": false
                        },
                        "controlPlane": {
                            "type": "object",
                            "title": "Control plane",
                            "description": "Advanced configuration of control plane components.",
                            "required": [
                                "rolloutBefore"
                            ],
                            "properties": {
                                "apiServer": {
                                    "type": "object",
                                    "title": "API server",
                                    "description": "Advanced configuration of API server.",
                                    "properties": {
                                        "additionalAdmissionPlugins": {
                                            "$ref": "#/$defs/additionalAdmissionPlugins"
                                        },
                                        "admissionConfiguration": {
                                            "type": "object",
                                            "title": "Admission configuration",
                                            "description": "Configuration of admission control.",
                                            "additionalProperties": false,
                                            "properties": {
                                                "plugins": {
                                                    "type": "array",
                                                    "title": "Admission plugin configurations",
                                                    "description": "A list of admission plugin configurations.",
                                                    "items": {
                                                        "type": "object",
                                                        "title": "Admission plugin configuration",
                                                        "description": "An admission plugin configuration.",
                                                        "required": [
                                                            "name",
                                                            "config"
                                                        ],
                                                        "additionalProperties": false,
                                                        "properties": {
                                                            "config": {
                                                                "type": "string",
                                                                "title": "Admission plugin configuration",
                                                                "description": "Configuration of the admission plugin."
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "title": "Admission plugin name",
                                                                "description": "Name of the admission plugin."
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "auditPolicy": {
                                            "type": "object",
                                            "title": "Audit policy",
                                            "description": "Configuration of the audit policy.",
                                            "additionalProperties": false,
                                            "properties": {
                                                "extraRules": {
                                                    "type": "array",
                                                    "title": "Additional audit policy rules",
                                                    "description": "A list of additional audit policy rules.",
                                                    "items": {
                                                        "type": "object",
                                                        "title": "Additional audit policy rule"
                                                    }
                                                }
                                            }
                                        },
                                        "bindPort": {
                                            "type": "integer",
                                            "title": "Bind port",
                                            "description": "Kubernetes API bind port used for API server pod.",
                                            "maximum": 65535,
                                            "minimum": 0
                                        },
                                        "enablePriorityAndFairness": {
                                            "type": "boolean",
                                            "title": "Enable priority and fairness",
                                            "description": "If true and the APIPriorityAndFairness feature gate is enabled, replace the max-in-flight handler with an enhanced one that queues and dispatches with priority and fairness.",
                                            "default": true
                                        },
                                        "etcdPrefix": {
                                            "type": "string",
                                            "title": "etcd prefix",
                                            "description": "The prefix to prepend to all resource paths in etcd. If nothing is specified, the API server uses '/registry' prefix by default."
                                        },
                                        "extraArgs": {
                                            "type": "object",
                                            "title": "Extra CLI args",
                                            "description": "A map with the additional CLI flags that are appended to the default flags. Use with caution, as there is no validation for these values, so you can set incorrect or duplicate flags."
                                        },
                                        "extraCertificateSANs": {
                                            "type": "array",
                                            "title": "Extra certificate SANs",
                                            "description": "The additional certificate SANs that are appended to the default SANs. Use with caution, as there is no validation for these values, so you can set incorrect or duplicate certificates.",
                                            "items": {
                                                "type": "string",
                                                "title": "Extra certificate SAN"
                                            }
                                        },
                                        "featureGates": {
                                            "$ref": "#/$defs/featureGates"
                                        }
                                    }
                                },
                                "controllerManager": {
                                    "type": "object",
                                    "title": "Controller manager",
                                    "description": "Advanced configuration of controller manager",
                                    "properties": {
                                        "featureGates": {
                                            "$ref": "#/$defs/featureGates"
                                        },
                                        "terminatedPodGCThreshold": {
                                            "type": "integer",
                                            "title": "Terminated pod GC threshold",
                                            "description": "Number of terminated pods that can exist before the terminated pod garbage collector starts deleting terminated pods. If <= 0, the terminated pod garbage collector is disabled.",
                                            "default": 125
                                        }
                                    }
                                },
                                "etcd": {
                                    "type": "object",
                                    "title": "etcd",
                                    "description": "Configuration of etcd",
                                    "additionalProperties": false,
                                    "properties": {
                                        "dataDir": {
                                            "type": "string",
                                            "title": "Data directory",
                                            "description": "The directory for etcd data."
                                        },
                                        "experimental": {
                                            "type": "object",
                                            "title": "Experimental",
                                            "properties": {
                                                "peerSkipClientSanVerification": {
                                                    "type": "boolean",
                                                    "title": "Peer skip client SAN verification",
                                                    "description": "Skip verification of SAN field in client certificate for peer connections."
                                                }
                                            }
                                        },
                                        "extraArgs": {
                                            "type": "object",
                                            "title": "Extra args"
                                        },
                                        "initialCluster": {
                                            "type": "string",
                                            "title": "Initial cluster",
                                            "description": "Initial cluster configuration for bootstrapping."
                                        },
                                        "initialClusterState": {
                                            "type": "string",
                                            "title": "Initial cluster state",
                                            "enum": [
                                                "new",
                                                "existing"
                                            ]
                                        },
                                        "quotaBackendBytesGiB": {
                                            "type": "integer",
                                            "title": "Quota backend bytes in GiB",
                                            "description": "Raise the etcd default backend bytes limit up to 16GiB.",
                                            "default": 8,
                                            "maximum": 16,
                                            "minimum": 8
                                        }
                                    }
                                },
                                "files": {
                                    "type": "array",
                                    "title": "Files",
                                    "description": "Custom cluster-specific files that are deployed to control plane nodes.",
                                    "items": {
                                        "$ref": "#/$defs/fileFromSecret"
                                    }
                                },
                                "postKubeadmCommands": {
                                    "$ref": "#/$defs/postKubeadmCommands"
                                },
                                "preKubeadmCommands": {
                                    "$ref": "#/$defs/preKubeadmCommands"
                                },
                                "rolloutBefore": {
                                    "type": "object",
                                    "title": "Rollout Before",
                                    "description": "Rollout Before is a field to indicate a rollout should be performed if the specified criteria is met.",
                                    "required": [
                                        "certificatesExpiryDays"
                                    ],
                                    "properties": {
                                        "certificatesExpiryDays": {
                                            "type": "integer",
                                            "title": "Certificate expiry days",
                                            "description": "Indicates a rollout needs to be performed if the certificates of the machine will expire within the specified days.",
                                            "default": 180,
                                            "maximum": 364,
                                            "minimum": 30
                                        }
                                    }
                                }
                            }
                        },
                        "files": {
                            "type": "array",
                            "title": "Files",
                            "description": "Custom cluster-specific files that are deployed to all nodes.",
                            "items": {
                                "$ref": "#/$defs/fileFromSecret"
                            }
                        },
                        "kubelet": {
                            "type": "object",
                            "title": "Kubelet configuration",
                            "description": "Kubelet configuration settings for the whole cluster.",
                            "properties": {
                                "containerLogMaxFiles": {
                                    "type": "integer",
                                    "title": "Maximum number of container log files",
                                    "description": "Specifies the maximum number of container log files that can be present for a container.",
                                    "default": 0
                                },
                                "containerLogMaxSize": {
                                    "type": "string",
                                    "title": "Maximum size of the container log",
                                    "description": "Specifies the maximum size of the container log file before it is rotated. For example: \"5Mi\" or \"256Ki\".",
                                    "default": ""
                                },
                                "kubeReserved": {
                                    "type": "object",
                                    "title": "Kube reserved resources configuration",
                                    "description": "Resources configuration for Kubernetes system services.",
                                    "properties": {
                                        "cpu": {
                                            "type": "string",
                                            "title": "Kube reserved CPU",
                                            "description": "CPU reserved for Kubernetes system services.",
                                            "default": "350m"
                                        },
                                        "ephemeralStorage": {
                                            "type": "string",
                                            "title": "Kube reserved ephemeral storage",
                                            "description": "Ephemeral storage reserved for kubernetes system services.",
                                            "default": "1024Mi"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "title": "Kube reserved memory",
                                            "description": "Memory reserved for kubernetes system services.",
                                            "default": "1280Mi"
                                        }
                                    }
                                },
                                "systemReserved": {
                                    "type": "object",
                                    "title": "System reserved resources",
                                    "description": "Resources configuration for non-kubernetes system services.",
                                    "properties": {
                                        "cpu": {
                                            "type": "string",
                                            "title": "System reserved CPU",
                                            "description": "CPU reserved for system processes.",
                                            "default": "250m"
                                        },
                                        "memory": {
                                            "type": "string",
                                            "title": "System reserved memory",
                                            "description": "Memory reserved for system processes.",
                                            "default": "384Mi"
                                        }
                                    }
                                }
                            }
                        },
                        "postKubeadmCommands": {
                            "$ref": "#/$defs/postKubeadmCommands"
                        },
                        "preKubeadmCommands": {
                            "$ref": "#/$defs/preKubeadmCommands"
                        },
                        "registry": {
                            "type": "string",
                            "title": "Registry",
                            "description": "The registry to use for pulling images. If not set, the default registry is used.",
                            "default": "gsoci.azurecr.io"
                        },
                        "workers": {
                            "type": "object",
                            "title": "Workers",
                            "description": "Advanced configuration of worker nodes.",
                            "properties": {
                                "files": {
                                    "type": "array",
                                    "title": "Files",
                                    "description": "Custom cluster-specific files that are deployed to worker nodes.",
                                    "items": {
                                        "$ref": "#/$defs/fileFromSecret"
                                    }
                                },
                                "postKubeadmCommands": {
                                    "$ref": "#/$defs/postKubeadmCommands"
                                },
                                "preKubeadmCommands": {
                                    "$ref": "#/$defs/preKubeadmCommands"
                                }
                            }
                        }
                    }
                },
                "ephemeralConfiguration": {
                    "type": "object",
                    "title": "Ephemeral configuration",
                    "description": "This configuration is meant for Giant Swarm staff only, changes here are ephemeral and are not meant to be persistent and it can be removed at any point. It can be used for the purposes of development, testing and operations.",
                    "properties": {
                        "apps": {
                            "type": "object",
                            "title": "Apps",
                            "description": "Internal configuration of apps that are part of the cluster.",
                            "additionalProperties": false,
                            "patternProperties": {
                                "[a-z][a-zA-Z]+": {
                                    "$ref": "#/$defs/appEphemeral"
                                }
                            }
                        },
                        "offlineTesting": {
                            "type": "object",
                            "title": "Offline testing",
                            "description": "Configure how Helm template rendering behaves when it is running during testing (e.g. locally or in the CI) and without connection to cluster.",
                            "additionalProperties": false,
                            "properties": {
                                "renderWithoutReleaseResource": {
                                    "type": "boolean",
                                    "title": "Render without Release resource",
                                    "description": "Flag that indicates that Helm should render templates even when Release CR cannot be fetched from the cluster."
                                }
                            }
                        }
                    }
                }
            }
        },
        "providerIntegration": {
            "type": "object",
            "title": "Provider integration",
            "description": "Provider-specific properties that can be set by cluster-$provider chart in order to render correct templates for the provider.",
            "required": [
                "connectivity",
                "components",
                "controlPlane",
                "environmentVariables",
                "kubernetesVersion",
                "provider",
                "resourcesApi"
            ],
            "additionalProperties": false,
            "properties": {
                "apps": {
                    "type": "object",
                    "title": "Apps",
                    "description": "Provider-specific config for apps.",
                    "additionalProperties": false,
                    "properties": {
                        "capiNodeLabeler": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "certExporter": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "certManager": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "chartOperatorExtensions": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "cilium": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "ciliumServiceMonitors": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "clusterAutoscaler": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "coreDns": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "etcdKubernetesResourcesCountExporter": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "externalDns": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "giantswarmClusterSuite": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "k8sAuditMetrics": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "k8sDnsNodeCache": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "metricsServer": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "netExporter": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "networkPolicies": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "nodeExporter": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "observabilityBundle": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "prometheusBlackboxExporter": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "securityBundle": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "teleportKubeAgent": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "verticalPodAutoscaler": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        },
                        "verticalPodAutoscalerCrd": {
                            "$ref": "#/$defs/providerIntegrationAppConfig"
                        }
                    }
                },
                "bastion": {
                    "type": "object",
                    "title": "Internal bastion configuration",
                    "additionalProperties": false,
                    "properties": {
                        "kubeadmConfig": {
                            "type": "object",
                            "title": "Kubeadm config",
                            "description": "Configuration of bastion nodes.",
                            "additionalProperties": false,
                            "properties": {
                                "ignition": {
                                    "$ref": "#/$defs/ignition"
                                },
                                "preKubeadmCommands": {
                                    "$ref": "#/$defs/preKubeadmCommands"
                                }
                            }
                        }
                    }
                },
                "clusterAnnotationsTemplateName": {
                    "type": "string",
                    "title": "Cluster annotations template name",
                    "description": "The name of the template that renders provider-specific annotations for the Cluster resource"
                },
                "components": {
                    "type": "object",
                    "title": "Components",
                    "description": "Internal configuration of various components that form the Kubernetes cluster.",
                    "required": [
                        "containerd"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "containerd": {
                            "type": "object",
                            "title": "Containerd",
                            "description": "Configuration of containerd.",
                            "required": [
                                "sandboxContainerImage"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "sandboxContainerImage": {
                                    "type": "object",
                                    "title": "Sandbox image",
                                    "description": "The image used by sandbox / pause container",
                                    "required": [
                                        "name",
                                        "tag"
                                    ],
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "title": "Repository",
                                            "default": "giantswarm/pause"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "title": "Tag",
                                            "default": "3.9"
                                        }
                                    }
                                }
                            }
                        },
                        "systemd": {
                            "title": "systemd",
                            "default": null,
                            "oneOf": [
                                {
                                    "type": "null"
                                },
                                {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "timesyncd": {
                                            "type": "object",
                                            "title": "timesyncd",
                                            "description": "systemd-timesyncd is a system service that may be used to synchronize the local system clock with a remote Network Time Protocol (NTP) server.",
                                            "additionalProperties": false,
                                            "properties": {
                                                "ntp": {
                                                    "type": "array",
                                                    "title": "NTP",
                                                    "description": "A list of NTP server host names or IP addresses.",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                },
                "connectivity": {
                    "type": "object",
                    "title": "Connectivity",
                    "description": "Internal connectivity configuration.",
                    "additionalProperties": false,
                    "properties": {
                        "proxy": {
                            "type": "object",
                            "title": "Proxy",
                            "description": "Whether/how outgoing traffic is routed through proxy servers.",
                            "properties": {
                                "noProxy": {
                                    "type": "object",
                                    "title": "No proxy",
                                    "description": "To be passed to the NO_PROXY environment variable in all hosts.",
                                    "properties": {
                                        "templateName": {
                                            "type": "string",
                                            "title": "Template name",
                                            "description": "Name of Helm template that renders a YAML array with NO_PROXY addresses."
                                        },
                                        "value": {
                                            "type": "array",
                                            "title": "Value",
                                            "description": "Pre-defined static NO_PROXY values.",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "sshSsoPublicKey": {
                            "type": "string",
                            "title": "SSH public key for single sign-on",
                            "default": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM4cvZ01fLmO9cJbWUj7sfF+NhECgy+Cl0bazSrZX7sU vault-ca@vault.operations.giantswarm.io"
                        }
                    }
                },
                "controlPlane": {
                    "type": "object",
                    "title": "Provider-specific control plane configuration",
                    "required": [
                        "kubeadmConfig",
                        "resources"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "kubeadmConfig": {
                            "type": "object",
                            "title": "Kubeadm config",
                            "description": "Configuration of control plane nodes.",
                            "required": [
                                "ignition"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "clusterConfiguration": {
                                    "type": "object",
                                    "title": "Cluster configuration",
                                    "description": "Configuration of Kubernetes components.",
                                    "additionalProperties": false,
                                    "properties": {
                                        "apiServer": {
                                            "type": "object",
                                            "title": "API server",
                                            "description": "Configuration of API server.",
                                            "additionalProperties": false,
                                            "properties": {
                                                "additionalAdmissionPlugins": {
                                                    "$ref": "#/$defs/additionalAdmissionPlugins"
                                                },
                                                "apiAudiences": {
                                                    "title": "API audiences",
                                                    "description": "Identifiers of the API. The service account token authenticator will validate that tokens used against the API are bound to at least one of these audiences. If the --service-account-issuer flag is configured and this flag is not, 'api-audiences' field defaults to a single element list containing the issuer URL.",
                                                    "oneOf": [
                                                        {
                                                            "type": "null"
                                                        },
                                                        {
                                                            "type": "object",
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "templateName": {
                                                                    "type": "string",
                                                                    "title": "Template name",
                                                                    "description": "The name of the Helm template which renders the 'api-audiences' value"
                                                                },
                                                                "value": {
                                                                    "type": "string",
                                                                    "title": "Value",
                                                                    "description": "Static value for api-audiences."
                                                                }
                                                            },
                                                            "oneOf": [
                                                                {
                                                                    "required": [
                                                                        "templateName"
                                                                    ],
                                                                    "not": {
                                                                        "required": [
                                                                            "value"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "required": [
                                                                        "value"
                                                                    ],
                                                                    "not": {
                                                                        "required": [
                                                                            "templateName"
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "cloudConfig": {
                                                    "type": "string",
                                                    "title": "cloud config",
                                                    "description": "The path of the cloud config file."
                                                },
                                                "featureGates": {
                                                    "$ref": "#/$defs/featureGates"
                                                },
                                                "serviceAccountIssuer": {
                                                    "title": "Service account issuer",
                                                    "description": "Configuration of the identifier of the service account token issuer. You must specify either URL or clusterDomainPrefix (only one, not both).",
                                                    "oneOf": [
                                                        {
                                                            "type": "null"
                                                        },
                                                        {
                                                            "type": "object",
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "clusterDomainPrefix": {
                                                                    "type": "string",
                                                                    "title": "Cluster domain prefix",
                                                                    "description": "Prefix that is prepended to the cluster domain name, so that resulting URL is used as the identifier of the service account token issuer."
                                                                },
                                                                "templateName": {
                                                                    "type": "string",
                                                                    "title": "Template name",
                                                                    "description": "The name of the Helm template which renders the 'url' value"
                                                                },
                                                                "url": {
                                                                    "type": "string",
                                                                    "title": "URL",
                                                                    "description": "This URL is used as the identifier of the service account token issuer."
                                                                }
                                                            },
                                                            "oneOf": [
                                                                {
                                                                    "required": [
                                                                        "url"
                                                                    ],
                                                                    "not": {
                                                                        "required": [
                                                                            "clusterDomainPrefix",
                                                                            "templateName"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "required": [
                                                                        "clusterDomainPrefix"
                                                                    ],
                                                                    "not": {
                                                                        "required": [
                                                                            "url",
                                                                            "templateName"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "required": [
                                                                        "templateName"
                                                                    ],
                                                                    "not": {
                                                                        "required": [
                                                                            "url",
                                                                            "clusterDomainPrefix"
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "default": {}
                                        },
                                        "controllerManager": {
                                            "type": "object",
                                            "title": "Controller manager",
                                            "description": "Configuration of controller manager",
                                            "properties": {
                                                "externalCloudVolumePlugin": {
                                                    "type": "string",
                                                    "title": "External cloud volume plugin",
                                                    "description": "The plugin to use if the controller-manager cloud provider is set to external. Most in-tree providers are deprecated and this should only be set if you really need it."
                                                },
                                                "featureGates": {
                                                    "$ref": "#/$defs/featureGates"
                                                }
                                            }
                                        }
                                    }
                                },
                                "diskSetup": {
                                    "type": "object",
                                    "title": "Disk setup",
                                    "description": "Provider-specific disk setup that is deployed to control plane nodes. They are specified in the cluster-<provider> apps.",
                                    "properties": {
                                        "filesystems": {
                                            "$ref": "#/$defs/filesystems"
                                        }
                                    }
                                },
                                "files": {
                                    "type": "array",
                                    "title": "Files",
                                    "description": "Provider-specific files that are deployed to control plane nodes. They are specified in the cluster-<provider> apps.",
                                    "items": {
                                        "$ref": "#/$defs/fileFromSecret"
                                    }
                                },
                                "ignition": {
                                    "$ref": "#/$defs/ignition"
                                },
                                "mounts": {
                                    "type": "array",
                                    "title": "Mounts",
                                    "description": "Provider-specific mounts that are deployed to control plane nodes. They are specified in the cluster-<provider> apps.",
                                    "items": {
                                        "$ref": "#/$defs/mounts"
                                    }
                                },
                                "postKubeadmCommands": {
                                    "$ref": "#/$defs/postKubeadmCommands"
                                },
                                "preKubeadmCommands": {
                                    "$ref": "#/$defs/preKubeadmCommands"
                                }
                            }
                        },
                        "resources": {
                            "type": "object",
                            "title": "Resources configuration",
                            "description": "GVK and other configuration for control plane resources.",
                            "required": [
                                "controlPlane",
                                "infrastructureMachineTemplate",
                                "infrastructureMachineTemplateSpecTemplateName"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "controlPlane": {
                                    "type": "object",
                                    "title": "Control plane resource config",
                                    "required": [
                                        "api"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "api": {
                                            "$ref": "#/$defs/gvk"
                                        }
                                    },
                                    "default": {
                                        "api": {
                                            "group": "controlplane.cluster.x-k8s.io",
                                            "kind": "KubeadmControlPlane",
                                            "version": "v1beta1"
                                        }
                                    }
                                },
                                "infrastructureMachineTemplate": {
                                    "$ref": "#/$defs/infrastructureMachineTemplate"
                                },
                                "infrastructureMachineTemplateSpecTemplateName": {
                                    "type": "string",
                                    "title": "Infrastructure Machine template spec template name",
                                    "description": "The name of Helm template that renders Infrastructure Machine template spec."
                                }
                            }
                        }
                    }
                },
                "environmentVariables": {
                    "type": "object",
                    "title": "environmentVariables for provider",
                    "additionalProperties": false,
                    "properties": {
                        "hostName": {
                            "type": "string",
                            "title": "",
                            "description": "Environment for host name."
                        },
                        "ipv4": {
                            "type": "string",
                            "title": "IPv4",
                            "description": "Environment for IPv4."
                        }
                    }
                },
                "hashSalt": {
                    "type": "string",
                    "title": "Hash salt",
                    "description": "If specified, this token is used as a salt to the hash suffix of some resource names. Can be used to force-recreate some resources."
                },
                "kubeadmConfig": {
                    "type": "object",
                    "title": "Provider-specific kubeadm config",
                    "description": "Provider-specific kubeadm config that is common for all nodes, including both control plane and workers.",
                    "additionalProperties": false,
                    "properties": {
                        "files": {
                            "type": "array",
                            "title": "Files",
                            "description": "Provider-specific files that are deployed to all nodes. They are specified in the cluster-<provider> apps.",
                            "items": {
                                "$ref": "#/$defs/fileFromSecret"
                            }
                        },
                        "ignition": {
                            "$ref": "#/$defs/ignition"
                        },
                        "postKubeadmCommands": {
                            "$ref": "#/$defs/postKubeadmCommands"
                        },
                        "preKubeadmCommands": {
                            "$ref": "#/$defs/preKubeadmCommands"
                        }
                    }
                },
                "kubernetesVersion": {
                    "type": "string",
                    "title": "Kubernetes version",
                    "default": "1.25.16"
                },
                "osImage": {
                    "type": "object",
                    "title": "OS image",
                    "description": "OS image properties",
                    "properties": {
                        "channel": {
                            "type": "string",
                            "title": "Channel",
                            "enum": [
                                "stable",
                                "beta",
                                "alpha",
                                "lts"
                            ],
                            "default": "stable"
                        },
                        "name": {
                            "type": "string",
                            "title": "Name"
                        },
                        "variant": {
                            "type": "string",
                            "title": "Variant"
                        },
                        "version": {
                            "type": "string",
                            "title": "Version"
                        }
                    }
                },
                "pauseProperties": {
                    "type": "object",
                    "title": "Pause properties",
                    "description": "A map of property names and their values that will affect setting pause annotation",
                    "additionalProperties": {
                        "type": [
                            "string",
                            "number",
                            "integer",
                            "boolean"
                        ]
                    }
                },
                "provider": {
                    "type": "string",
                    "title": "Provider",
                    "description": "The name of the Cluster API provider. The name here must match the name of the provider in cluster-<provider> app name."
                },
                "registry": {
                    "type": "object",
                    "title": "Registry",
                    "description": "The registry to use for pulling images. If not set, the default registry is used.",
                    "properties": {
                        "templateName": {
                            "type": "string",
                            "title": "Template name"
                        }
                    }
                },
                "resourcesApi": {
                    "type": "object",
                    "title": "Resources API",
                    "description": "Group, version and kind configuration that is required and used by a specific Cluster API provider.",
                    "required": [
                        "clusterResourceEnabled",
                        "controlPlaneResourceEnabled",
                        "machinePoolResourcesEnabled",
                        "machineHealthCheckResourceEnabled",
                        "bastionResourceEnabled",
                        "infrastructureCluster"
                    ],
                    "properties": {
                        "bastionResourceEnabled": {
                            "type": "boolean",
                            "title": "Bastion resource enabled",
                            "description": "Flag that indicates if the Bastion resource is enabled and templated. This is meant only for the initial development purposes for the sake of incrementally integrating cluster chart into cluster-$provider apps.",
                            "default": true
                        },
                        "cleanupHelmReleaseResourcesEnabled": {
                            "type": "boolean",
                            "title": "Cleanup HelmRelease hook job resource enabled",
                            "description": "Flag that indicates if the Cleanup HelmRelease Hook Job is enabeld and templated. This is meant only for the initial development purposes for the sake of incrementally integrating cluster chart into cluster-$provider apps.",
                            "default": false
                        },
                        "clusterResourceEnabled": {
                            "type": "boolean",
                            "title": "Cluster resource enabled",
                            "description": "Flag that indicates if the Cluster resource is enabled and templated. This is meant only for the initial development purposes for the sake of incrementally integrating cluster chart into cluster-$provider apps.",
                            "default": true
                        },
                        "controlPlaneResourceEnabled": {
                            "type": "boolean",
                            "title": "Control plane resource enabled",
                            "description": "Flag that indicates if the control plane resource is enabled and templated. This is meant only for the initial development purposes for the sake of incrementally integrating cluster chart into cluster-$provider apps.",
                            "default": true
                        },
                        "helmRepositoryResourcesEnabled": {
                            "type": "boolean",
                            "title": "HelmRepository resources enabled",
                            "description": "Flag that indicates if the HelmRepository resources are enabled and templated. This is meant only for the initial development purposes for the sake of incrementally integrating cluster chart into cluster-$provider apps.",
                            "default": false
                        },
                        "infrastructureCluster": {
                            "$ref": "#/$defs/infrastructureCluster"
                        },
                        "machineHealthCheckResourceEnabled": {
                            "type": "boolean",
                            "title": "MachineHealthCheck resource enabled",
                            "description": "Flag that indicates if the MachineHealthCheck resource is enabled and templated. This is meant only for the initial development purposes for the sake of incrementally integrating cluster chart into cluster-$provider apps.",
                            "default": true
                        },
                        "machinePoolResourcesEnabled": {
                            "type": "boolean",
                            "title": "Machine pool resources enabled",
                            "description": "Flag that indicates if the machine pool resources are enabled and templated. This is meant only for the initial development purposes for the sake of incrementally integrating cluster chart into cluster-$provider apps.",
                            "default": true
                        }
                    },
                    "allOf": [
                        {
                            "if": {
                                "type": "object",
                                "properties": {
                                    "machinePoolResourcesEnabled": {
                                        "const": true
                                    }
                                }
                            },
                            "then": {
                                "required": [
                                    "nodePoolKind"
                                ],
                                "properties": {
                                    "nodePoolKind": {
                                        "type": "string",
                                        "title": "Node pool kind",
                                        "description": "Specifies which resource kind is used for node pools.",
                                        "enum": [
                                            "MachineDeployment",
                                            "MachinePool"
                                        ]
                                    }
                                }
                            }
                        },
                        {
                            "if": {
                                "type": "object",
                                "properties": {
                                    "machinePoolResourcesEnabled": {
                                        "const": true
                                    },
                                    "nodePoolKind": {
                                        "const": "MachinePool"
                                    }
                                }
                            },
                            "then": {
                                "required": [
                                    "infrastructureMachinePool"
                                ],
                                "properties": {
                                    "infrastructureMachinePool": {
                                        "$ref": "#/$defs/infrastructureMachinePool"
                                    }
                                }
                            }
                        },
                        {
                            "if": {
                                "type": "object",
                                "properties": {
                                    "bastionResourceEnabled": {
                                        "const": true
                                    }
                                }
                            },
                            "then": {
                                "required": [
                                    "bastion"
                                ],
                                "properties": {
                                    "bastion": {
                                        "type": "object",
                                        "title": "Bastion",
                                        "description": "Configuration of bastion resources API and names.",
                                        "properties": {
                                            "infrastructureMachineTemplate": {
                                                "$ref": "#/$defs/infrastructureMachineTemplate"
                                            },
                                            "infrastructureMachineTemplateSpecTemplateName": {
                                                "type": "string",
                                                "title": "Infrastructure Machine template spec template name",
                                                "description": "The name of Helm template that renders Infrastructure Machine template spec."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "unevaluatedProperties": false
                },
                "teleport": {
                    "type": "object",
                    "title": "Teleport",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "title": "Enable teleport",
                            "default": true
                        },
                        "proxyAddr": {
                            "type": "string",
                            "title": "Teleport proxy address",
                            "default": "teleport.giantswarm.io:443"
                        },
                        "version": {
                            "type": "string",
                            "title": "Teleport version",
                            "default": "14.1.3"
                        }
                    }
                },
                "useReleases": {
                    "type": "boolean",
                    "title": "Use releases",
                    "description": "Flag that indicates if the provider is using release resources to get app and component versions.",
                    "default": false
                },
                "workers": {
                    "type": "object",
                    "title": "Provider-specific workers configuration",
                    "required": [
                        "defaultNodePools"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "defaultNodePools": {
                            "type": "object",
                            "title": "Default node pools",
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[a-z0-9][-a-z0-9]{3,18}[a-z0-9]$": {
                                    "$ref": "#/$defs/nodePool"
                                }
                            }
                        },
                        "kubeadmConfig": {
                            "type": "object",
                            "title": "Kubeadm config",
                            "description": "Configuration of workers nodes.",
                            "required": [
                                "ignition"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "files": {
                                    "type": "array",
                                    "title": "Files",
                                    "description": "Provider-specific files that are deployed to worker nodes. They are specified in the cluster-<provider> apps.",
                                    "items": {
                                        "$ref": "#/$defs/fileFromSecret"
                                    }
                                },
                                "ignition": {
                                    "$ref": "#/$defs/ignition"
                                },
                                "postKubeadmCommands": {
                                    "$ref": "#/$defs/postKubeadmCommands"
                                },
                                "preKubeadmCommands": {
                                    "$ref": "#/$defs/preKubeadmCommands"
                                }
                            }
                        },
                        "resources": {
                            "type": "object",
                            "title": "Resources configuration",
                            "description": "Infrastructure template for worker resources when using MachineDeployment.",
                            "additionalProperties": false,
                            "properties": {
                                "infrastructureMachineTemplateSpecTemplateName": {
                                    "type": "string",
                                    "title": "Infrastructure Machine template spec template name",
                                    "description": "The name of Helm template that renders Infrastructure Machine template spec."
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
