{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$defs": {
        "cidrBlocks": {
            "type": "array",
            "items": {
                "type": "string",
                "description": "IPv4 address range, in CIDR notation.",
                "examples": [
                    "10.244.0.0/16"
                ],
                "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/([0-9]|[1,2][0-9]|[3][0-2]))?$"
            },
            "minItems": 1
        },
        "cloneMode": {
            "type": "string",
            "title": "VM template clone mode",
            "enum": [
                "fullClone",
                "linkedClone"
            ],
            "default": "linkedClone"
        },
        "diskGiB": {
            "type": "integer",
            "title": "Disk size",
            "examples": [
                30
            ],
            "exclusiveMinimum": 0
        },
        "featureGate": {
            "type": "object",
            "title": "Feature gate",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "title": "Enabled"
                },
                "name": {
                    "type": "string",
                    "title": "Name",
                    "examples": [
                        "UserNamespacesStatelessPodsSupport"
                    ],
                    "pattern": "^[A-Za-z0-9]+$"
                }
            }
        },
        "memoryGiB": {
            "type": "integer",
            "title": "Memory size",
            "examples": [
                8192
            ],
            "minimum": 8192
        },
        "network": {
            "type": "object",
            "title": "Network configuration",
            "additionalProperties": false,
            "properties": {
                "devices": {
                    "type": "array",
                    "title": "Network devices",
                    "description": "Network interface configuration for VMs.",
                    "additionalProperties": false,
                    "items": {
                        "type": "object",
                        "title": "Devices",
                        "required": [
                            "networkName"
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "dhcp4": {
                                "type": "boolean",
                                "title": "IPv4 DHCP",
                                "description": "Is DHCP enabled on this segment."
                            },
                            "networkName": {
                                "type": "string",
                                "title": "Segment name",
                                "description": "Segment name to attach nodes to. Must already exist."
                            }
                        }
                    }
                }
            }
        },
        "numCPUs": {
            "type": "integer",
            "title": "Number of CPUs",
            "examples": [
                6
            ],
            "minimum": 2
        },
        "resourcePool": {
            "type": "string",
            "title": "VSphere resource pool name",
            "default": "*/Resources"
        },
        "template": {
            "type": "string",
            "title": "VM template",
            "default": "flatcar-stable-3815.2.2-kube-v1.27.14-gs"
        }
    },
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "baseDomain": {
            "type": "string",
            "title": "Base DNS domain"
        },
        "global": {
            "type": "object",
            "title": "Properties that are available to all charts and subcharts",
            "required": [
                "metadata",
                "nodePools"
            ],
            "properties": {
                "connectivity": {
                    "type": "object",
                    "title": "Connectivity",
                    "description": "Configurations related to cluster connectivity such as container registries.",
                    "required": [
                        "baseDomain",
                        "network"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "baseDomain": {
                            "type": "string",
                            "title": "Base DNS domain"
                        },
                        "containerRegistries": {
                            "type": "object",
                            "title": "Container registries",
                            "description": "Endpoints and credentials configuration for container registries.",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "endpoint"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                        "credentials": {
                                            "type": "object",
                                            "title": "Credentials",
                                            "description": "Credentials for the endpoint.",
                                            "additionalProperties": false,
                                            "properties": {
                                                "auth": {
                                                    "type": "string",
                                                    "title": "Auth",
                                                    "description": "Base64-encoded string from the concatenation of the username, a colon, and the password."
                                                },
                                                "identitytoken": {
                                                    "type": "string",
                                                    "title": "Identity token",
                                                    "description": "Used to authenticate the user and obtain an access token for the registry."
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "title": "Password",
                                                    "description": "Used to authenticate for the registry with username/password."
                                                },
                                                "username": {
                                                    "type": "string",
                                                    "title": "Username",
                                                    "description": "Used to authenticate for the registry with username/password."
                                                }
                                            }
                                        },
                                        "endpoint": {
                                            "type": "string",
                                            "title": "Endpoint",
                                            "description": "Endpoint for the container registry."
                                        }
                                    }
                                }
                            },
                            "default": {}
                        },
                        "localRegistryCache": {
                            "type": "object",
                            "title": "Local registry cache",
                            "description": "Caching container registry within the cluster.",
                            "required": [
                                "enabled",
                                "port"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enable",
                                    "description": "Enabling this will deploy the Zot registry service in the cluster. To make use of it as a pull-through cache, you also have to specify registries to cache images for.",
                                    "default": false
                                },
                                "mirroredRegistries": {
                                    "type": "array",
                                    "title": "Registries to cache",
                                    "description": "Here you must specify each registry to cache container images for. Please also make sure to have an entry for each registry in Global > Components > Containerd > Container registries.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": []
                                },
                                "port": {
                                    "type": "integer",
                                    "title": "Service port",
                                    "description": "NodePort used by the local registry service.",
                                    "default": 32767
                                }
                            }
                        },
                        "network": {
                            "type": "object",
                            "title": "Network",
                            "required": [
                                "pods",
                                "services",
                                "loadBalancers"
                            ],
                            "properties": {
                                "controlPlaneEndpoint": {
                                    "type": "object",
                                    "title": "Endpoint",
                                    "description": "Kubernetes API configuration.",
                                    "properties": {
                                        "host": {
                                            "type": "string",
                                            "title": "Host",
                                            "description": "IP for access to the Kubernetes API. Manually select an IP for kube API. Empty string for auto selection from the ipPoolName pool."
                                        },
                                        "ipPoolName": {
                                            "type": "string",
                                            "title": "Ip Pool Name",
                                            "description": "Ip for control plane will be drawn from this GlobalInClusterIPPool resource.",
                                            "default": "wc-cp-ips",
                                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                        },
                                        "port": {
                                            "type": "integer",
                                            "title": "Port number",
                                            "description": "Port for access to the Kubernetes API.",
                                            "default": 6443
                                        }
                                    }
                                },
                                "loadBalancers": {
                                    "type": "object",
                                    "title": "Load balancers",
                                    "description": "Loadbalancer IP source.",
                                    "additionalProperties": false,
                                    "properties": {
                                        "cidrBlocks": {
                                            "$ref": "#/$defs/cidrBlocks",
                                            "title": "Load Balancer subnets"
                                        },
                                        "ipPoolName": {
                                            "type": "string",
                                            "title": "Ip Pool Name",
                                            "description": "Ip for Service LB running in WC will be drawn from this GlobalInClusterIPPool resource.",
                                            "default": "svc-lb-ips",
                                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                        }
                                    }
                                },
                                "pods": {
                                    "type": "object",
                                    "title": "Pods",
                                    "required": [
                                        "cidrBlocks"
                                    ],
                                    "properties": {
                                        "cidrBlocks": {
                                            "$ref": "#/$defs/cidrBlocks",
                                            "title": "Pod subnets",
                                            "default": [
                                                "10.244.0.0/16"
                                            ]
                                        }
                                    }
                                },
                                "services": {
                                    "type": "object",
                                    "title": "Services",
                                    "required": [
                                        "cidrBlocks"
                                    ],
                                    "properties": {
                                        "cidrBlocks": {
                                            "$ref": "#/$defs/cidrBlocks",
                                            "title": "Service subnets",
                                            "default": [
                                                "172.31.0.0/16"
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "proxy": {
                            "type": "object",
                            "title": "Proxy",
                            "description": "Whether/how outgoing traffic is routed through proxy servers.",
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enable"
                                },
                                "secretName": {
                                    "type": "string",
                                    "title": "Secret name",
                                    "description": "Name of a secret resource used by containerd to obtain the HTTP_PROXY, HTTPS_PROXY, and NO_PROXY environment variables. If empty the value will be defaulted to <clusterName>-cluster-values.",
                                    "pattern": "^[a-z0-9-]{0,63}$"
                                }
                            }
                        },
                        "shell": {
                            "type": "object",
                            "title": "Shell access",
                            "additionalProperties": false,
                            "properties": {
                                "osUsers": {
                                    "type": "array",
                                    "title": "OS Users",
                                    "description": "Configuration for OS users in cluster nodes.",
                                    "items": {
                                        "type": "object",
                                        "title": "User",
                                        "required": [
                                            "name"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "title": "Name",
                                                "description": "Username of the user.",
                                                "minLength": 2,
                                                "pattern": "^[a-z][-a-z0-9]+$"
                                            },
                                            "sudo": {
                                                "type": "string",
                                                "title": "Sudoers configuration",
                                                "description": "Permissions string to add to /etc/sudoers for this user."
                                            }
                                        }
                                    },
                                    "default": [
                                        {
                                            "name": "giantswarm",
                                            "sudo": "ALL=(ALL) NOPASSWD:ALL"
                                        }
                                    ]
                                },
                                "sshTrustedUserCAKeys": {
                                    "type": "array",
                                    "title": "Trusted SSH cert issuers",
                                    "description": "CA certificates of issuers that are trusted to sign SSH user certificates.",
                                    "items": {
                                        "type": "string"
                                    },
                                    "default": [
                                        "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM4cvZ01fLmO9cJbWUj7sfF+NhECgy+Cl0bazSrZX7sU vault-ca@vault.operations.giantswarm.io"
                                    ]
                                }
                            }
                        }
                    }
                },
                "controlPlane": {
                    "type": "object",
                    "title": "Control plane",
                    "additionalProperties": false,
                    "properties": {
                        "image": {
                            "type": "object",
                            "title": "Node container image",
                            "additionalProperties": false,
                            "properties": {
                                "repository": {
                                    "type": "string",
                                    "title": "Repository",
                                    "default": "gsoci.azurecr.io/giantswarm"
                                }
                            }
                        },
                        "machineTemplate": {
                            "type": "object",
                            "title": "Template to define control plane nodes",
                            "required": [
                                "network"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "cloneMode": {
                                    "$ref": "#/$defs/cloneMode",
                                    "description": "VM template cloning method."
                                },
                                "diskGiB": {
                                    "$ref": "#/$defs/diskGiB",
                                    "description": "Control plane node root volume size, in GB."
                                },
                                "memoryMiB": {
                                    "$ref": "#/$defs/memoryGiB",
                                    "description": "Control plane memory size, in MB.",
                                    "default": 8192
                                },
                                "network": {
                                    "$ref": "#/$defs/network",
                                    "description": "Control plane node network configuration."
                                },
                                "numCPUs": {
                                    "$ref": "#/$defs/numCPUs",
                                    "description": "Control plane CPU count.",
                                    "default": 4
                                },
                                "resourcePool": {
                                    "$ref": "#/$defs/resourcePool",
                                    "description": "Name of the resource pool to use."
                                },
                                "template": {
                                    "$ref": "#/$defs/template",
                                    "description": "Full name of the VM template."
                                }
                            }
                        },
                        "oidc": {
                            "type": "object",
                            "title": "OIDC authentication",
                            "additionalProperties": false,
                            "properties": {
                                "caFile": {
                                    "type": "string",
                                    "title": "Certificate authority file",
                                    "description": "Path to identity provider's CA certificate in PEM format."
                                },
                                "clientId": {
                                    "type": "string",
                                    "title": "Client ID",
                                    "description": "OIDC client identifier to identify with."
                                },
                                "groupsClaim": {
                                    "type": "string",
                                    "title": "Groups claim",
                                    "description": "Name of the identity token claim bearing the user's group memberships."
                                },
                                "groupsPrefix": {
                                    "type": "string",
                                    "title": "Groups prefix",
                                    "description": "Prefix prepended to groups values to prevent clashes with existing names."
                                },
                                "issuerUrl": {
                                    "type": "string",
                                    "title": "Issuer URL",
                                    "description": "URL of the provider which allows the API server to discover public signing keys, not including any path. Discovery URL without the '/.well-known/openid-configuration' part."
                                },
                                "usernameClaim": {
                                    "type": "string",
                                    "title": "Username claim",
                                    "description": "Name of the identity token claim bearing the unique user identifier."
                                },
                                "usernamePrefix": {
                                    "type": "string",
                                    "title": "Username prefix",
                                    "description": "Prefix prepended to username values to prevent clashes with existing names."
                                }
                            }
                        },
                        "replicas": {
                            "type": "integer",
                            "title": "Number of nodes",
                            "minimum": 1
                        },
                        "resourceRatio": {
                            "type": "integer",
                            "title": "Resource ratio",
                            "description": "Ratio between node resources and apiserver resource requests.",
                            "default": 8,
                            "minimum": 8
                        }
                    }
                },
                "metadata": {
                    "type": "object",
                    "title": "Metadata",
                    "additionalProperties": false,
                    "properties": {
                        "description": {
                            "type": "string",
                            "title": "Cluster description",
                            "description": "User-friendly description of the cluster's purpose."
                        },
                        "labels": {
                            "type": "object",
                            "title": "Labels",
                            "description": "These labels are added to the Kubernetes resources defining this cluster.",
                            "additionalProperties": false,
                            "patternProperties": {
                                "^[a-zA-Z0-9/\\._-]+$": {
                                    "type": "string",
                                    "title": "Label",
                                    "maxLength": 63,
                                    "minLength": 0,
                                    "pattern": "^[a-zA-Z0-9\\._-]+$"
                                }
                            }
                        },
                        "organization": {
                            "type": "string",
                            "title": "Organization"
                        },
                        "preventDeletion": {
                            "type": "boolean",
                            "title": "Prevent cluster deletion",
                            "default": false
                        },
                        "servicePriority": {
                            "type": "string",
                            "title": "Service priority",
                            "description": "The relative importance of this cluster.",
                            "$comment": "Defined in https://github.com/giantswarm/rfc/tree/main/classify-cluster-priority",
                            "enum": [
                                "highest",
                                "medium",
                                "lowest"
                            ],
                            "default": "highest"
                        }
                    }
                },
                "nodePools": {
                    "type": "object",
                    "title": "Node pools",
                    "description": "Groups of worker nodes with identical configuration.",
                    "additionalProperties": false,
                    "patternProperties": {
                        "^[a-z0-9-]{3,10}$": {
                            "type": "object"
                        }
                    },
                    "properties": {
                        "worker": {
                            "type": "object",
                            "title": "Default nodePool",
                            "required": [
                                "network"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "cloneMode": {
                                    "$ref": "#/$defs/cloneMode",
                                    "description": "VM template cloning method."
                                },
                                "diskGiB": {
                                    "$ref": "#/$defs/diskGiB",
                                    "description": "Worker node root volume size, in GB."
                                },
                                "memoryMiB": {
                                    "$ref": "#/$defs/memoryGiB",
                                    "description": "Worker memory size, in MB.",
                                    "default": 16896
                                },
                                "network": {
                                    "$ref": "#/$defs/network",
                                    "description": "Worker node network configuration."
                                },
                                "numCPUs": {
                                    "$ref": "#/$defs/numCPUs",
                                    "description": "Worker node CPU count.",
                                    "default": 6
                                },
                                "replicas": {
                                    "type": "integer",
                                    "title": "Number of nodes",
                                    "default": 2,
                                    "minimum": 1
                                },
                                "resourcePool": {
                                    "$ref": "#/$defs/resourcePool",
                                    "description": "Name of the resource pool to use."
                                },
                                "template": {
                                    "$ref": "#/$defs/template",
                                    "description": "Full name of the VM template."
                                }
                            }
                        }
                    }
                },
                "podSecurityStandards": {
                    "type": "object",
                    "title": "Pod Security Standards",
                    "properties": {
                        "enforced": {
                            "type": "boolean",
                            "title": "Enforced Pod Security Standards",
                            "description": "Use PSSs instead of PSPs.",
                            "default": true
                        }
                    }
                },
                "providerSpecific": {
                    "type": "object",
                    "title": "Provider specific configuration",
                    "properties": {
                        "vcenter": {
                            "type": "object",
                            "title": "VCenter",
                            "description": "Configuration for vSphere API access.",
                            "properties": {
                                "datacenter": {
                                    "type": "string",
                                    "title": "Datacenter",
                                    "description": "Name of the datacenter to deploy nodes into."
                                },
                                "datastore": {
                                    "type": "string",
                                    "title": "Datastore",
                                    "description": "Name of the datastore for node disk storage."
                                },
                                "password": {
                                    "type": "string",
                                    "title": "Password",
                                    "description": "Password for the VSphere API."
                                },
                                "region": {
                                    "type": "string",
                                    "title": "Region",
                                    "description": "Category name in VSphere for topology.kubernetes.io/region labels."
                                },
                                "server": {
                                    "type": "string",
                                    "title": "Server",
                                    "description": "URL of the VSphere API."
                                },
                                "thumbprint": {
                                    "type": "string",
                                    "title": "Thumbprint",
                                    "description": "TLS certificate signature of the VSphere API."
                                },
                                "username": {
                                    "type": "string",
                                    "title": "Username",
                                    "description": "Username for the VSphere API."
                                },
                                "zone": {
                                    "type": "string",
                                    "title": "Zone",
                                    "description": "Category name in VSphere for topology.kubernetes.io/zone labels."
                                }
                            }
                        }
                    }
                }
            }
        },
        "internal": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "apiServer": {
                    "type": "object",
                    "properties": {
                        "certSANs": {
                            "type": "array",
                            "title": "Subject alternative names (SAN)",
                            "description": "Alternative names to encode in the API server's certificate.",
                            "items": {
                                "type": "string",
                                "title": "SAN"
                            },
                            "default": []
                        },
                        "enableAdmissionPlugins": {
                            "type": "array",
                            "title": "Admission plugins",
                            "description": "List of admission plugins to be passed to the API server via the --enable-admission-plugins flag.",
                            "items": {
                                "type": "string",
                                "title": "Plugin",
                                "examples": [
                                    "DefaultStorageClass",
                                    "Priority"
                                ],
                                "pattern": "^[A-Za-z0-9]+$"
                            },
                            "default": [
                                "DefaultStorageClass",
                                "DefaultTolerationSeconds",
                                "LimitRanger",
                                "MutatingAdmissionWebhook",
                                "NamespaceLifecycle",
                                "PersistentVolumeClaimResize",
                                "Priority",
                                "ResourceQuota",
                                "ServiceAccount",
                                "ValidatingAdmissionWebhook"
                            ]
                        },
                        "featureGates": {
                            "type": "array",
                            "title": "Feature gates",
                            "description": "API server feature gate activation/deactivation.",
                            "items": {
                                "$ref": "#/$defs/featureGate"
                            },
                            "default": []
                        }
                    }
                },
                "ciliumNetworkPolicy": {
                    "type": "object",
                    "title": "CiliumNetworkPolicies",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "title": "Enable CiliumNetworkPolicies",
                            "description": "Installs the network-policies-app (deny all by default) if set to true",
                            "default": true
                        }
                    }
                },
                "controllerManager": {
                    "type": "object",
                    "title": "Controller manager",
                    "additionalProperties": false,
                    "properties": {
                        "featureGates": {
                            "type": "array",
                            "title": "Feature gates",
                            "description": "Controller manager feature gate activation/deactivation.",
                            "items": {
                                "$ref": "#/$defs/featureGate"
                            },
                            "default": []
                        }
                    }
                },
                "enableEncryptionProvider": {
                    "type": "boolean",
                    "title": "API server encryption at REST",
                    "description": "Enable encryption at REST feature of API server.",
                    "default": true
                },
                "kubectlImage": {
                    "type": "object",
                    "title": "Kubectl image",
                    "description": "Used by cluster-shared library chart to configure coredns in-cluster.",
                    "additionalProperties": false,
                    "properties": {
                        "name": {
                            "type": "string",
                            "title": "Repository",
                            "default": "giantswarm/kubectl"
                        },
                        "registry": {
                            "type": "string",
                            "title": "Registry",
                            "default": "gsoci.azurecr.io"
                        },
                        "tag": {
                            "type": "string",
                            "title": "Tag",
                            "default": "1.27.14"
                        }
                    }
                },
                "kubernetesVersion": {
                    "type": "string",
                    "title": "Kubernetes version",
                    "description": "Kubernetes version to deploy. Must match the version available in the image defined at template.",
                    "default": "v1.27.14"
                },
                "sandboxContainerImage": {
                    "type": "object",
                    "title": "Sandbox Container image",
                    "properties": {
                        "name": {
                            "type": "string",
                            "title": "Repository",
                            "default": "giantswarm/pause"
                        },
                        "registry": {
                            "type": "string",
                            "title": "Registry",
                            "default": "gsoci.azurecr.io"
                        },
                        "tag": {
                            "type": "string",
                            "title": "Tag",
                            "default": "3.9"
                        }
                    }
                },
                "teleport": {
                    "type": "object",
                    "title": "Teleport",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "title": "Enable teleport",
                            "default": true
                        },
                        "proxyAddr": {
                            "type": "string",
                            "title": "Teleport proxy address",
                            "default": "teleport.giantswarm.io:443"
                        },
                        "version": {
                            "type": "string",
                            "title": "Teleport version",
                            "default": "14.1.3"
                        }
                    }
                }
            }
        },
        "managementCluster": {
            "type": "string",
            "title": "Management cluster name"
        },
        "provider": {
            "type": "string",
            "title": "Provider name"
        }
    }
}
